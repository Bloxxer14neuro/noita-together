package NT;
syntax = "proto3";

message Envelope {
    oneof kind {
        GameAction game_action = 0;
        LobbyAction lobby_action = 50;
    }
}

message GameAction {
    oneof action {
        PlayerUpdate player_update = 0;
        PlayerUpdateInventory player_update_inventory = 1;
        PlayerBankAddSpell player_bank_add_spell = 2;
        PlayerBankTakeSpell player_bank_take_spell = 3;
        PlayerBankAddWand player_bank_add_wand = 4;
        PlayerBankTakeWand player_bank_take_wand = 5;
        PlayerBankAddItem player_bank_add_item = 6;
        PlayerBankTakeItem player_bank_take_item = 7;
        PlayerBankAddGold player_bank_add_gold = 8;
        PlayerBankTakeGold player_bank_take_gold = 9;
        PlayerPickupItem player_pickup_item = 10;

        PlayerDeath player_death = 11;
        PlayerNewGamePlus player_newgame_plus = 12;

        NemesisPickupItem nemesis_pickup_item = 30;
        NemesisAbility nemesis_ability = 31;

        ChatMessage chat_message = 50;

        BankUpdate bank_update = 60;
    }
}

message BankUpdate { // bandwitdh yo
    required string user_id = 0;
    repeated Wand wands = 1;
    repeated Spell spells = 2;
    repeated Item items = 3;
    uint32 gold = 4;
}

message ChatMessage {
    required string user_id = 0;
    required string message = 1;
}

message PlayerUpdate {
    required string user_id = 0;
    optional float x = 1;
    optional float y = 2;
    optional float hp = 3;
    optional float speed = 4; 
    optional string location = 5;
}

message PlayerUpdateInventory {
    required string user_id = 0;
    repeated InventoryWand wands = 1;
    repeated InventoryItem items = 2;
    repeated InventorySpell spells = 3;

    message InventoryWand {
        required uint32 index = 0;
        required Wand wand = 1;
    }

    message InventoryItem {
        required uint32 index = 0;
        required Item item = 1;
    }

    message InventorySpell {
        required uint32 index = 0;
        required Spell spell = 1;
    }
}

message PlayerBankAddSpell {
    string user_id = 0;
    repeated Spell spells = 1;
}

message PlayerBankTakeSpell {
    string user_id = 0;
    repeated Spell spells = 1;
}

message PlayerBankAddWand {
    string user_id = 0;
    required Wand wand = 1;
}

message PlayerBankTakeWand {
    string user_id = 0;
    required uint32 id = 1;
}

message PlayerBankAddItem {
    string user_id = 0;
    required Item item = 1;
}

message PlayerBankTakeItem {
    string user_id = 0;
    required Item item = 1;
}

message PlayerBankAddGold {
    string user_id = 0;
    required uint32 amount = 1;
}

message PlayerBankTakeGold {
    string user_id = 0;
    required uint32 amount = 1;
}

message PlayerPickupItem {
    string user_id = 0;
    oneof kind {
        HeartPickup heart = 1;
        OrbPickup orb = 2;
    }

    message HeartPickup {
        required bool hp_perk = 0;
    }

    message OrbPickup {
        required uint32 id = 0;
    }
}

message NemesisPickupItem {
    string user_id = 0;
    required string game_id = 1;
}

message NemesisAbility {
    string user_id = 0;
    required string game_id = 1;
}

message PlayerDeath {
    string user_id = 0;
    required bool is_win = 1;
    optional uint32 game_time = 2;
}

message PlayerNewGamePlus {
    string user_id = 0;
    required uint32 amount = 1;
}

message Wand {
    required uint32 id = 0;
    WandStats stats = 1;
    repeated Spell always_cast = 2;
    repeated Spell deck = 3;
    optional string sent_by = 4;
    optional string contributed_by = 5;

    message WandStats {
        required string sprite = 0;
        required float mana = 1;
        required string ui_name = 2;
        required float mana_max = 3;
        required float mana_charge_speed = 4;
        required uint32 reload_time = 5;
        required uint32 actions_per_round = 6;
        required uint32 deck_capacity = 7;
        required uint32 shuffle_deck_when_empty = 8;
        required float spread_degrees = 9;
        required float speed_multiplier = 10;
        required uint32 fire_rate_wait = 11;
    }
}

message Spell {
    required uint32 id = 0;
    required string game_id = 1;
    optional string sent_by = 2;
    optional string contributed_by = 3;
}

message Item {
    required uint32 id = 0;
    required uint32 content = 1;
    required uint32 material = 2;
    optional string sent_by = 3;
    optional string contributed_by = 4;
}

message LobbyAction {
    oneof action {
        LobbyCreate lobby_create = 0;
        LobbyUpdate lobby_update = 1;
        LobbyDelete lobby_delete = 2;
        LobbyJoin lobby_join = 3;
        LobbyLeave lobby_leave = 4;
        LobbyKick lobby_kick = 5;
        LobbyUpdateFlags lobby_flags = 6;
        LobbyReadyState lobby_ready_state = 7;
        LobbyHostStart lobby_host_start = 8;
        LobbyList lobby_list = 9;
        LobbyDisconnected lobby_disconnected = 10;
        LobbyCreationFailed lobby_creation_failed = 11;
        LobbyJoinFailed lobby_join_failed = 12;
        LobbyUpdateFailed lobby_update_failed = 13;
        LobbyLeaveSuccess lobby_leave_success = 14;
        LobbyUpdatedFlags lobby_updated_flags = 15;
    }
}

message LobbyDisconnected {
    string reason = 0;
}

message LobbyCreate {
    required string name = 0;
    required uint32 gamemode = 1;
    required uint32 max_users = 2;
    optional string password = 3;
}

message LobbyCreationFailed {
    string reason = 0;
}

message LobbyUpdate {
    oneof update {
        string name = 1;
        uint32 gamemode = 2;
        uint32 max_users = 3;
        string password = 4;
    }
}

message LobbyUpdateFailed{
    string reason = 0;
}

message LobbyDelete {
    required string id = 0;
}

message LobbyJoin {
    required string id = 0;
    optional string password = 1;
}

message LobbyJoinFailed {
    string reason = 0;
}

message LobbyJoined {
    required string user_id = 1;
    required string name = 2;
}

message LobbyLeave {
    required string user_id = 1;
}

message LobbyLeaveSuccess {
    bool success = 0;
}

message LobbyKick {
    required string user_id = 1;
}

message LobbyUpdateFlags {
    repeated GameFlag flags = 0;
    message GameFlag {
        required string flag = 0;
        optional int32 int_val = 1;
        optional string str_val = 2;
        optional float float_val = 3;
    }
}

message LobbyUpdatedFlags {
    bool success = 0;
}

message LobbyReadyState {
    required bool ready = 0;
    required string mod_version = 1;
    optional ModList mods = 2;
    
    message ModList {
        repeated string mod = 0;
    }
}

message LobbyHostStart {
    required bool idk = 0;
}

message LobbyList {
    repeated Room rooms = 0;
    message Room {
        required string id = 0;
        required string name = 1;
        required uint32 gamemode = 2;
        required uint32 cur_users = 3;
        required uint32 max_users = 4;
        required bool protected = 5;
    }
}

message LobbyRefresh {
    required uint32 page = 0;
}